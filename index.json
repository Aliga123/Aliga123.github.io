[{"content":"简介 本篇blog主要内容：零基础对大佬搭建好的hugo项目进行使用和部署，并修改成自己的hugo和搭配Typora编写blog。\n1.安装git、hugo git安装不多介绍，下载网址：https://git-scm.com/\nhugo安装步骤如下：\n（1）在releases里面需要和自己电脑匹配的版本。（例如我的是hugo_0.128.2_windows-amd64.zip） （2）创建一个用于存放hugo的文件夹，并且在该文件里面创建bin、Sites两个文件夹。 （3）将下载好的hugo解压到bin文件夹里面（解压后就一个hugo.exe文件）。 （4）将hugo配置到环境变量里面。注意需要将用户变量和系统变量的paht都配置一下（也就是在它们两个的path里面都添加\u0026hellip;\\bin地址）。 （5）在命令行或bash输入hugo version检查时候安装成功。 2.拉取项目 （1）打开命令行或bash（个人喜欢用bash，后面只提到bash），进入到刚刚创建的Sites文件目录下。 （2）使用git命令拉取Sulv大佬的项目：git clone https://github.com/xyming108/sulv-hugo-papermod.git 。项目会保存在Sites目录下。 （3）进入到项目目录：cd sulv-hugo-papermod （4）拉取hugo-PaperMod主题：git submodule update --init（子模块的git地址以及存在在.git文件里面，所有直接运行这个命令） （5）cd ..退回到项目目录下，再本地启动hugo服务：hugo server -D 或 hugo server -t hugo-PaperMod --buildDrafts （6）登录http://localhost:1313/查看是否本地启动成功 3.部署到GitHub云端 （1）在自己的GitHub上创建一个空仓库。仓库名需要注意前面一段要和GitHub账号名字相同，后面都是固定.github.io。例如我的GitHub账号叫Aliaga123，创建的仓库名Aliga123.github.io\n（2）在目录sulv-hugo-papermod下运行命令：hugo --theme=hugo-PaperMod --baseURL=\u0026quot;https://Aliga123.github.io\u0026quot; --buildDrafts。注意，Aliga123.github.io是我的仓库名，换成你的。\n（3）cd public进行到public目录，提交到自己的仓库：\ngit init git remote add origin https://github.com/Aliga123/Aliga123.github.io.git 或者 （git remote add origin git@github.com:Aliga123/Aliga123.github.io.git，按理说这个应该也可行，但是我这个测试了不行） git add . git commit -m \u0026#34;add my notes\u0026#34; git push -u origin master 或者 git push（这个测试出现权限拒绝访问） 上传成功后，需要等待一段时间就可以在在网络访问：https://aliga123.github.io/。如果等待一段时间还是访问不了，那就重新提交一下试试。\n4.将Hugo修改成自己的内容，创建md文件 主页页面设置都在config.yml里面，修改里面的设置换成自己的。注意，修改或添加新的文章分类后，要保证文件夹名和yml里面的路径一致。\n可以直接在content/posts里面仿照给的示例编写或者修改自己md文件文件。创建新的分类文件名要小写。\n修改完成自己的后，记得删掉原public文件。因为重复提交不会删除原来的，而是将修改认定为新的添加进去。\n开始创建md文件编写blog：\n（1）直接使用typora在对应位置创建md文件，复制其他md文件的前缀后修改：\ntitle: \u0026#34;Hugo\u0026#34; date: 2024-07-27T21:27:55+08:00 lastmod: 2024-07-27T21:27:55+08:00 author: [\u0026#34;aliga\u0026#34;] keywords: - categories: # 没有分类界面可以不填写 - tags: # 标签 - description: \u0026#34;开发个人blog网站的工具\u0026#34; weight: slug: \u0026#34;\u0026#34; draft: false # 是否为草稿 comments: true # 本页面是否显示评论 reward: true # 打赏 mermaid: true #是否开启mermaid showToc: true # 显示目录 TocOpen: true # 自动展开目录 hidemeta: false # 是否隐藏文章的元信息，如发布日期、作者等 disableShare: true # 底部不显示分享栏 showbreadcrumbs: true #顶部显示路径 cover: image: \u0026#34;\u0026#34; #图片路径例如：posts/tech/123/123.png zoom: # 图片大小，例如填写 50% 表示原图像的一半大小 caption: \u0026#34;\u0026#34; #图片底部描述 alt: \u0026#34;\u0026#34; relative: false. （2）命令行或bash在项目目录下sulv-hugo-papermod打开后：hugo new posts/tools/hugo.md\n2.后续编写、修改blog的提交操作 （1）更新public的html文件。在在目录sulv-hugo-papermod下运行命令：\nhugo --theme=hugo-PaperMod --baseURL=\u0026#34;https://Aliga123.github.io\u0026#34; --buildDrafts （2）提交（不知为什么有时候提交不了，我不知道怎么弄，直接删掉仓库重新步骤3。\ncd public git add . git commit -m \u0026#34;add my notes\u0026#34; git push -u origin master ","permalink":"https://Aliga123.github.io/posts/tools/hugo/","summary":"简介 本篇blog主要内容：零基础对大佬搭建好的hugo项目进行使用和部署，并修改成自己的hugo和搭配Typora编写blog。 1.安装git、hugo git安装不多介绍，下载网址：https://git-scm.com/ hugo安装步骤如下： （1）在releases里面需要和自","title":"Hugo"},{"content":"1. 介绍 scan命令的作用和keys *的作用类似，主要用于查找redis中的键，但是在正式的生产环境中一般不会直接使用keys *这个命令，因为他会返回所有的键，如果键的数量很多会导致查询时间很长，进而导致服务器阻塞，所以需要scan来进行更细致的查找\nscan总共有这几种命令：scan、sscan、hscan、zscan，分别用于迭代数据库中的：数据库中所有键、集合键、哈希键、有序集合键，命令具体结构如下：\nscan cursor [MATCH pattern] [COUNT count] [TYPE type] sscan key cursor [MATCH pattern] [COUNT count] hscan key cursor [MATCH pattern] [COUNT count] zscan key cursor [MATCH pattern] [COUNT count] 2. scan scan cursor [MATCH pattern] [COUNT count] [TYPE type]，cursor表示游标，指查询开始的位置，count默认为10，查询完后会返回下一个开始的游标，当返回0的时候表示所有键查询完了\n127.0.0.1:6379[2]\u0026gt; scan 0 1) \u0026#34;3\u0026#34; 2) 1) \u0026#34;mystring\u0026#34; 2) \u0026#34;myzadd\u0026#34; 3) \u0026#34;myhset\u0026#34; 4) \u0026#34;mylist\u0026#34; 5) \u0026#34;myset2\u0026#34; 6) \u0026#34;myset1\u0026#34; 7) \u0026#34;mystring1\u0026#34; 8) \u0026#34;mystring3\u0026#34; 9) \u0026#34;mystring4\u0026#34; 10) \u0026#34;myset\u0026#34; 127.0.0.1:6379[2]\u0026gt; scan 3 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;myzadd1\u0026#34; 2) \u0026#34;mystring2\u0026#34; 3) \u0026#34;mylist2\u0026#34; 4) \u0026#34;myhset1\u0026#34; 5) \u0026#34;mylist1\u0026#34; MATCH可以采用模糊匹配找出自己想要查找的键，这里的逻辑是先查出20个，再匹配，而不是先匹配再查询，这里加上count 20是因为默认查出的10个数中可能不能包含所有的相关项，所以把范围扩大到查20个，我这里测试的键总共有15个\n127.0.0.1:6379[2]\u0026gt; scan 0 match mylist* count 20 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;mylist\u0026#34; 2) \u0026#34;mylist2\u0026#34; 3) \u0026#34;mylist1\u0026#34; TYPE可以根据具体的结构类型来匹配该类型的键\n127.0.0.1:6379[2]\u0026gt; scan 0 count 20 type list 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;mylist\u0026#34; 2) \u0026#34;mylist2\u0026#34; 3) \u0026#34;mylist1\u0026#34; 3. sscan sscan key cursor [MATCH pattern] [COUNT count]，sscan的第一个参数总是集合类型的key\n127.0.0.1:6379[2]\u0026gt; sadd myset1 a b c d (integer) 4 127.0.0.1:6379[2]\u0026gt; smembers myset1 1) \u0026#34;d\u0026#34; 2) \u0026#34;a\u0026#34; 3) \u0026#34;c\u0026#34; 4) \u0026#34;b\u0026#34; 127.0.0.1:6379[2]\u0026gt; sscan myset1 0 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;d\u0026#34; 2) \u0026#34;c\u0026#34; 3) \u0026#34;b\u0026#34; 4) \u0026#34;a\u0026#34; 127.0.0.1:6379[2]\u0026gt; sscan myset1 0 match a 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;a\u0026#34; 4. hscan hscan key cursor [MATCH pattern] [COUNT count]，sscan的第一个参数总是哈希类型的key\n127.0.0.1:6379[2]\u0026gt; hset myhset1 kk1 vv1 kk2 vv2 kk3 vv3 (integer) 3 127.0.0.1:6379[2]\u0026gt; hgetall myhset1 1) \u0026#34;kk1\u0026#34; 2) \u0026#34;vv1\u0026#34; 3) \u0026#34;kk2\u0026#34; 4) \u0026#34;vv2\u0026#34; 5) \u0026#34;kk3\u0026#34; 6) \u0026#34;vv3\u0026#34; 127.0.0.1:6379[2]\u0026gt; hscan myhset1 0 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;kk1\u0026#34; 2) \u0026#34;vv1\u0026#34; 3) \u0026#34;kk2\u0026#34; 4) \u0026#34;vv2\u0026#34; 5) \u0026#34;kk3\u0026#34; 6) \u0026#34;vv3\u0026#34; 5. zscan zscan key cursor [MATCH pattern] [COUNT count]，sscan的第一个参数总是有序集合类型的key\n127.0.0.1:6379[2]\u0026gt; zadd myzadd1 1 zz1 2 zz2 3 zz3 (integer) 3 127.0.0.1:6379[2]\u0026gt; zrange myzadd1 0 -1 withscores 1) \u0026#34;zz1\u0026#34; 2) \u0026#34;1\u0026#34; 3) \u0026#34;zz2\u0026#34; 4) \u0026#34;2\u0026#34; 5) \u0026#34;zz3\u0026#34; 6) \u0026#34;3\u0026#34; 127.0.0.1:6379[2]\u0026gt; zscan myzadd1 0 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;zz1\u0026#34; 2) \u0026#34;1\u0026#34; 3) \u0026#34;zz2\u0026#34; 4) \u0026#34;2\u0026#34; 5) \u0026#34;zz3\u0026#34; 6) \u0026#34;3\u0026#34; ","permalink":"https://Aliga123.github.io/posts/back-end/tech1/","summary":"1. 介绍 scan命令的作用和keys *的作用类似，主要用于查找redis中的键，但是在正式的生产环境中一般不会直接使用keys *这个命令，因为他会返回所有的键，如果键的数量很多会导致查询时间很长，进而导致服务器阻塞，所以需要scan来进行更细致的查找 scan总共有这几种命令：sca","title":"Redis scan命令学习"},{"content":"","permalink":"https://Aliga123.github.io/posts/ai-llm/blog/","summary":"","title":"Prompt工程"},{"content":"","permalink":"https://Aliga123.github.io/posts/database/life/","summary":"","title":"MySQL"},{"content":"","permalink":"https://Aliga123.github.io/posts/machine-learning/life/","summary":"","title":"决策树算法"},{"content":"","permalink":"https://Aliga123.github.io/posts/front-end/read/","summary":"","title":"JavaScript"},{"content":"\u0026lt;div\u0026gt; 科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码 这里做了一个修改 这里再次做了一个修改 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 \u0026lt;/div\u0026gt; ","permalink":"https://Aliga123.github.io/posts/back-end/tech/","summary":"\u0026lt;div\u0026gt; 科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码 这里做了一个修改 这里再次做了一个修改 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科","title":"Tech"},{"content":"\rSulv\u0026#39;s Blog\r一个记录技术、阅读、生活的博客\r👉友链格式\r名称： Sulv\u0026rsquo;s Blog 网址： https://www.sulvblog.cn 图标： https://www.sulvblog.cn/img/Q.gif 描述： 一个记录技术、阅读、生活的博客 👉友链申请要求\r秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内\n👉Hugo博客交流群\r787018782\n","permalink":"https://Aliga123.github.io/links/","summary":"Sulv\u0026#39;s Blog 一个记录技术、阅读、生活的博客 👉友链格式 名称： Sulv\u0026rsquo;s Blog 网址： https://www.sulvblog.cn 图标： https://www.sulvblog.cn/img/Q.gif 描述： 一个记录技术、阅读、生活的博客 👉友链申请要求 秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内 👉Hugo博客交流群 787018782","title":"🤝友链"},{"content":"关于我\n英文名: Aliga 职业: 程序员 运动: 骑行、健身、爬山 ","permalink":"https://Aliga123.github.io/about/","summary":"关于我 英文名: Aliga 职业: 程序员 运动: 骑行、健身、爬山","title":"🙋🏻‍♂️关于"}]